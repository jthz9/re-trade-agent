services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload # Already in Dockerfile CMD

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevent host node_modules from overwriting container node_modules
      - /app/.next # Prevent host .next from overwriting container .next
    # depends_on:
    #   - backend # Uncomment if frontend needs backend to be up first
    # command: npm run dev # Assuming you have a dev script in package.json

# Optional: Define named volumes if needed for persistent data (e.g., database)
# volumes:
#   postgres_data:
